//This is an autogenerated file that pulls data from
//Etsy's api to generate classes that can be deserialized
//to with newtonsoft.json when receiving JSON from the API
//Creator: Andy Riedlinger

using Newtonsoft.Json.Linq;
using System.Collections.Generic;

namespace Etsy
{

    //https://www.etsy.com/developers/documentation/reference/apimethod
    public class ApiMethod
    {

        ///<summary>The method's descriptive name.</summary>
        public string Name { get; set; }

        ///<summary>The method's URI pattern.  Parameters are marked with a leading colon.</summary>
        public string Uri { get; set; }

        ///<summary>An array of method parameters and types.</summary>
        public Dictionary<string, string> Params { get; set; }

        ///<summary>An array of default values for parameters.  Parameters that lack a default are required.</summary>
        public Dictionary<string, string> Defaults { get; set; }

        ///<summary>The resource type returned by the method.</summary>
        public string Type { get; set; }

        ///<summary>The method's visibility level.  Methods marked "private" require authentication.</summary>
        public string Visibility { get; set; }

        ///<summary>The HTTP method used to call the API method.</summary>
        public string Http_Method { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/avatar
    public class Avatar
    {

        ///<summary>The numeric ID for this avatar image.</summary>
        public int Avatar_Id { get; set; }

        ///<summary>The avatar' average RGB color, in webhex notation.</summary>
        public string Hex_Code { get; set; }

        ///<summary>The avatar's average red channel (RGB color) value from 0-255.</summary>
        public int Red { get; set; }

        ///<summary>The avatar's average green channel (RGB color) value from 0-255.</summary>
        public int Green { get; set; }

        ///<summary>The avatar's average blue channel (RGB color) value from 0-255.</summary>
        public int Blue { get; set; }

        ///<summary>The avatar's average hue (HSV color) from 0-360.</summary>
        public int Hue { get; set; }

        ///<summary>The avatar's average saturation (HSV color) from 0-100.</summary>
        public int Saturation { get; set; }

        ///<summary>The avatar's average brightness (HSV color) from 0-100.</summary>
        public int Brightness { get; set; }

        ///<summary>True if the avatar is a black and white image.</summary>
        public bool Is_Black_And_White { get; set; }

        ///<summary>The time that the avatar was uploaded.</summary>
        public float Creation_Tsz { get; set; }

        ///<summary>The numeric ID of the user who owns the avatar.</summary>
        public int User_Id { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/billcharge
    public class BillCharge
    {

        ///<summary>The numeric ID for this bill charge record.</summary>
        public int Bill_Charge_Id { get; set; }

        ///<summary>Creation time, in epoch seconds.</summary>
        public float Creation_Tsz { get; set; }

        ///<summary>The name of the type of charge.</summary>
        public string Type { get; set; }

        ///<summary>The Listing, Transaction or Shipping Label ID to which the charge applies.</summary>
        public int Type_Id { get; set; }

        ///<summary>The user's numeric ID.</summary>
        public int User_Id { get; set; }

        ///<summary>The amount charged.</summary>
        public float Amount { get; set; }

        ///<summary>The currency of the charge.</summary>
        public string Currency_Code { get; set; }

        ///<summary>Year that the charge was created.</summary>
        public int Creation_Year { get; set; }

        ///<summary>Month that the charge was created.</summary>
        public int Creation_Month { get; set; }

        ///<summary>Time when charge was last modified.</summary>
        public float Last_Modified_Tsz { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/billingoverview
    public class BillingOverview
    {

        ///<summary>True if the user has an overdue balance.</summary>
        public bool Is_Overdue { get; set; }

        ///<summary>The currency unit in which the user is billed.</summary>
        public string Currency_Code { get; set; }

        ///<summary>The total overdue balance owed by the user.</summary>
        public float Overdue_Balance { get; set; }

        ///<summary>The total amount currently due for payment (including any overdue balance.)</summary>
        public float Balance_Due { get; set; }

        ///<summary>The total amount owed by the user (including fees that are not yet due for payment.)</summary>
        public float Total_Balance { get; set; }

        ///<summary>The date by which the user's balance due must be paid.</summary>
        public int Date_Due { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/billpayment
    public class BillPayment
    {

        ///<summary>The numeric ID for this bill payment record.</summary>
        public int Bill_Payment_Id { get; set; }

        ///<summary>Creation time, in epoch seconds.</summary>
        public float Creation_Tsz { get; set; }

        ///<summary>The name of the type of payment.</summary>
        public string Type { get; set; }

        ///<summary>The Listing or Transaction ID (or LedgerEntry ID in the case of a ledger payment) to which the payment applies.</summary>
        public int Type_Id { get; set; }

        ///<summary>The user's numeric ID.</summary>
        public int User_Id { get; set; }

        ///<summary>The amount paid.</summary>
        public float Amount { get; set; }

        ///<summary>The currency of the payment.</summary>
        public string Currency_Code { get; set; }

        ///<summary>Month that the payment was made.</summary>
        public int Creation_Month { get; set; }

        ///<summary>Year that the payment was made.</summary>
        public int Creation_Year { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/cart
    public class Cart
    {

        ///<summary>The numeric ID of the cart</summary>
        public int Cart_Id { get; set; }

        ///<summary>The shop name</summary>
        public string Shop_Name { get; set; }

        ///<summary>The message to the seller</summary>
        public string Message_To_Seller { get; set; }

        ///<summary>The numeric ID of the destination country</summary>
        public int Destination_Country_Id { get; set; }

        ///<summary>The ISO (alphabetic) code for the currency</summary>
        public string Currency_Code { get; set; }

        ///<summary>The total price</summary>
        public string Total { get; set; }

        ///<summary>The subtotal price</summary>
        public string Subtotal { get; set; }

        ///<summary>The shipping cost</summary>
        public string Shipping_Cost { get; set; }

        ///<summary>The tax cost</summary>
        public string Tax_Cost { get; set; }

        ///<summary>The line-item discount amount (does not include tax or shipping)</summary>
        public string Discount_Amount { get; set; }

        ///<summary>The shipping discount amount</summary>
        public string Shipping_Discount_Amount { get; set; }

        ///<summary>The tax discount amount</summary>
        public string Tax_Discount_Amount { get; set; }

        ///<summary>The full URL to the cart page on Etsy</summary>
        public string Url { get; set; }

        ///<summary>An array of purchase information for the listings</summary>
        public CartListing[] listings { get; set; }

        ///<summary>The cart is download only</summary>
        public bool Is_Download_Only { get; set; }

        ///<summary>The cart has VAT tax</summary>
        public bool Has_Vat { get; set; }

        ///<summary>The selected shipping option identifier for the cart</summary>
        public ShippingOption Shipping_Option { get; set; }

        ///<summary>The shop</summary>
        public Shop Shop { get; set; }

        ///<summary>An array of listings</summary>
        public Listing[] Listings { get; set; }

        ///<summary>Available shipping options for the cart</summary>
        public ShippingOption[] ShippingOptions { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/cartlisting
    public class CartListing
    {

        ///<summary>The numeric ID of the listing</summary>
        public int Listing_Id { get; set; }

        ///<summary>The quantity of the listing being purchased</summary>
        public int Purchase_Quantity { get; set; }

        ///<summary>The purchase state of the listing, possible values: valid, invalid_quantity, invalid_shipping, not_active, edited, invalid_currency, invalid_shipping_currency</summary>
        public string Purchase_State { get; set; }

        ///<summary>True if this listing is for a digital download.</summary>
        public bool Is_Digital { get; set; }

        ///<summary>Written description of the files attached to this digital listing.</summary>
        public string File_Data { get; set; }

        ///<summary>When Variations are present on a listing, this can be used to differentiate multiple instances of the same listing.</summary>
        public int Listing_Customization_Id { get; set; }

        ///<summary>Whether Variations are available for this listing.</summary>
        public bool Variations_Available { get; set; }

        ///<summary>Whether the buyer selected Variations for this listing.</summary>
        public bool Has_Variations { get; set; }

        ///<summary>An array of selected Variations for this listing.</summary>
        public Dictionary<string, string>[] Selected_Variations { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/category
    public class Category
    {

        ///<summary>The identifier for this category.</summary>
        public int Category_Id { get; set; }

        ///<summary>The programmatic name for this category.</summary>
        public string Name { get; set; }

        ///<summary>The "title" meta tag value for the category's landing page (may be null).</summary>
        public string Meta_Title { get; set; }

        ///<summary>The "keywords" meta tag value for the category's landing page (may be null).</summary>
        public string Meta_Keywords { get; set; }

        ///<summary>The "description" meta tag value for the category's landing page (may be null).</summary>
        public string Meta_Description { get; set; }

        ///<summary>A short description of the category from the category' landing page (may be null).</summary>
        public string Page_Description { get; set; }

        ///<summary>The title of the category's landing page (may be null).</summary>
        public string Page_Title { get; set; }

        ///<summary>The category's string ID.</summary>
        public string Category_Name { get; set; }

        ///<summary>A short display name for the category.</summary>
        public string Short_Name { get; set; }

        ///<summary>A longer display name for the category.</summary>
        public string Long_Name { get; set; }

        ///<summary>The number of subcategories below this one. Subcatgories append a new tag to the end of their parent's category_name.</summary>
        public int Num_Children { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/country
    public class Country
    {

        ///<summary>The country's numeric ID.</summary>
        public int Country_Id { get; set; }

        ///<summary>The two-letter country code according to ISO 3166-1-alpha-2.</summary>
        public string Iso_Country_Code { get; set; }

        ///<summary>The three-letter country code according to the World Bank.</summary>
        public string World_Bank_Country_Code { get; set; }

        ///<summary>The country's plain-English name.</summary>
        public string Name { get; set; }

        ///<summary>The country's plain-English name slugified; suitable for interpolation into a url.</summary>
        public string Slug { get; set; }

        ///<summary>The country's latitude.</summary>
        public float Lat { get; set; }

        ///<summary>The country's longitude.</summary>
        public float Lon { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/coupon
    public class Coupon
    {

        ///<summary>The numeric ID of the coupon</summary>
        public int Coupon_Id { get; set; }

        ///<summary>The alphanumeric coupon code</summary>
        public string Coupon_Code { get; set; }

        ///<summary>True if the coupon is active</summary>
        public bool Seller_Active { get; set; }

        ///<summary>The discount percent (null for free shipping coupons)</summary>
        public int Pct_Discount { get; set; }

        ///<summary>True if the coupon applies free shipping</summary>
        public bool Free_Shipping { get; set; }

        ///<summary>True if the coupon free shipping applies to domestic addresses only</summary>
        public bool Domestic_Only { get; set; }

        ///<summary>The 3 letter currency code relating to currency values if any. fixed_discount or minimum_purchase_price</summary>
        public string Currency_Code { get; set; }

        ///<summary>Discount amount the coupon should take. For currency information see currency_code</summary>
        public string Fixed_Discount { get; set; }

        ///<summary>The minimum amount in a cart before tax or shipping needed in order to apply the coupon. For currency information see currency_code</summary>
        public string Minimum_Purchase_Price { get; set; }

        ///<summary>A epoch time (UTC) on which the coupon can no longer be applied</summary>
        public int Expiration_Date { get; set; }

        ///<summary>The type of coupon: fixed_discount, pct_discount, free_shipping for example</summary>
        public string Coupon_Type { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/datatype
    public class DataType
    {

        ///<summary>Base type of data</summary>
        public string Type { get; set; }

        ///<summary>Allowable values (for an enum.)</summary>
        public string[] Values { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/favoritelisting
    public class FavoriteListing
    {

        ///<summary>The listings numeric ID.</summary>
        public int Listing_Id { get; set; }

        ///<summary>The user's numeric ID.  Note: This field may be absent, depending on the user's privacy settings.</summary>
        public int User_Id { get; set; }

        ///<summary>The state of the listing.</summary>
        public string Listing_State { get; set; }

        ///<summary>The date and time that the listing was favorited.</summary>
        public int Create_Date { get; set; }

        ///<summary>The user who favorited the listing.  Note: This field may be absent, depending on the user's privacy settings.</summary>
        public User User { get; set; }

        ///<summary>The favorited listing.</summary>
        public Listing Listing { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/favoriteuser
    public class FavoriteUser
    {

        ///<summary>The user's numeric ID.  Note: This field may be absent, depending on the user's privacy settings.</summary>
        public int User_Id { get; set; }

        ///<summary>The targeted favorite user's numeric ID.</summary>
        public int Target_User_Id { get; set; }

        ///<summary>The date and time that the user was favorited.</summary>
        public float Creation_Tsz { get; set; }

        ///<summary>The user who marked the target user as a favorite.  Note: This field may be absent, depending on the user's privacy settings.</summary>
        public User User { get; set; }

        ///<summary>The user who was marked as a favorite.</summary>
        public User TargetUser { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/featuredtreasury
    public class FeaturedTreasury
    {

        ///<summary>The string key to identify the Treasury</summary>
        public string Treasury_Key { get; set; }

        ///<summary>The numeric ID for this FeaturedTreasury.</summary>
        public int Treasury_Id { get; set; }

        ///<summary>The user ID of the FeaturedTreasury owner.</summary>
        public int Treasury_Owner_Id { get; set; }

        ///<summary>The url to the FeaturedTreasury</summary>
        public string Url { get; set; }

        ///<summary>The region for which this FeaturedTreasury is active.</summary>
        public string Region { get; set; }

        ///<summary>The time this FeaturedTreasury is made active on the homepage</summary>
        public float Active_Date { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/feedback
    public class Feedback
    {

        ///<summary>The feedback record's numeric ID.</summary>
        public int Feedback_Id { get; set; }

        ///<summary>The transaction's numeric ID.</summary>
        public int Transaction_Id { get; set; }

        ///<summary>The numeric ID of the user who wrote this feedback.  Note: This field may be absent, depending on the buyer's privacy settings.</summary>
        public int Creator_User_Id { get; set; }

        ///<summary>The numeric ID of the user who received this feedback.  Note: This field may be absent, depending on the buyer's privacy settings.</summary>
        public int Target_User_Id { get; set; }

        ///<summary>The numeric ID of the user who was the seller in this transaction.</summary>
        public int Seller_User_Id { get; set; }

        ///<summary>The numeric ID of the user who was the buyer in this transaction.  Note: This field may be absent, depending on the buyer's privacy settings.</summary>
        public int Buyer_User_Id { get; set; }

        ///<summary>Creation time, in epoch seconds.</summary>
        public float Creation_Tsz { get; set; }

        ///<summary>A message left by the author, explaining the feedback.</summary>
        public string Message { get; set; }

        ///<summary>The feedback's value; 1 is positive, -1 is negative, and 0 is neutral.</summary>
        public int Value { get; set; }

        ///<summary>The numeric ID of the feedback's image (if present).  Note: This field may be absent, depending on the buyer's privacy settings.</summary>
        public int Image_Feedback_Id { get; set; }

        ///<summary>The url to a photo provided with the feedback, dimensions 25x25.  Note: This field may be absent, depending on the buyer's privacy settings.</summary>
        public string Image_Url_25x25 { get; set; }

        ///<summary>The url to a photo provided with the feedback, dimensions 155x125.  Note: This field may be absent, depending on the buyer's privacy settings.</summary>
        public string Image_Url_155x125 { get; set; }

        ///<summary>The url to a photo provided with the feedback, dimensions fullxfull.  Note: This field may be absent, depending on the buyer's privacy settings.</summary>
        public string Image_Url_Fullxfull { get; set; }

        ///<summary>The user who who was the buyer in this transaction.  Note: This field may be absent, depending on the buyer's privacy settings.</summary>
        public User Buyer { get; set; }

        ///<summary>The user who was the seller in this transaction.</summary>
        public User Seller { get; set; }

        ///<summary>The user who wrote this feedback.  Note: This field may be absent, depending on the buyer's privacy settings.</summary>
        public User Author { get; set; }

        ///<summary>The user who received this feedback.  Note: This field may be absent, depending on the buyer's privacy settings.</summary>
        public User Subject { get; set; }

        ///<summary>The transaction that this feedback pertains to.</summary>
        public Transaction Transaction { get; set; }

        ///<summary>The listing that this feedback pertains to.</summary>
        public Listing Listing { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/feedbackinfo
    public class FeedbackInfo
    {

        ///<summary>The number of feedbacks.</summary>
        public int Count { get; set; }

        ///<summary>The feedback score percentage.</summary>
        public int Score { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/forumpost
    public class ForumPost
    {

        ///<summary>Unique identifier of the thread</summary>
        public int Thread_Id { get; set; }

        ///<summary>Id of the individual post</summary>
        public int Post_Id { get; set; }

        ///<summary>The content of the post</summary>
        public string Post { get; set; }

        ///<summary>Id of the user who created the post</summary>
        public string User_Id { get; set; }

        ///<summary>When the post was last edited</summary>
        public int Last_Edit_Time { get; set; }

        ///<summary>When the post was created</summary>
        public int Create_Date { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/guest
    public class Guest
    {

        ///<summary>The ID that associates to the guest - a random 13-digit hash. Validated by the regular expression '/^[a-zA-Z0-9-_]+$/'. Each ID is identified internally to the Application that created it, meaning that other applications will not have access to this guest, even with the same ID.</summary>
        public string Guest_Id { get; set; }

        ///<summary>The URL to send the user's browser to on checkout. This will allow them to use this guest ID to check out with the carts associated. Please note that a guest cart's data are undefined after being merged on checkout.</summary>
        public string Checkout_Url { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/guestcart
    public class GuestCart
    {

        ///<summary>The numeric ID of the cart</summary>
        public int Cart_Id { get; set; }

        ///<summary>The shop name</summary>
        public string Shop_Name { get; set; }

        ///<summary>The message to the seller</summary>
        public string Message_To_Seller { get; set; }

        ///<summary>The numeric ID of the destination country</summary>
        public int Destination_Country_Id { get; set; }

        ///<summary>The ISO (alphabetic) code for the currency</summary>
        public string Currency_Code { get; set; }

        ///<summary>The total price</summary>
        public string Total { get; set; }

        ///<summary>The subtotal price</summary>
        public string Subtotal { get; set; }

        ///<summary>The shipping cost</summary>
        public string Shipping_Cost { get; set; }

        ///<summary>The tax cost</summary>
        public string Tax_Cost { get; set; }

        ///<summary>The line-item discount amount (does not include tax or shipping)</summary>
        public string Discount_Amount { get; set; }

        ///<summary>The shipping discount amount</summary>
        public string Shipping_Discount_Amount { get; set; }

        ///<summary>The tax discount amount</summary>
        public string Tax_Discount_Amount { get; set; }

        ///<summary>The full URL to the cart page on Etsy</summary>
        public string Url { get; set; }

        ///<summary>An array of purchase information for the listings</summary>
        public CartListing[] listings { get; set; }

        ///<summary>The cart is download only</summary>
        public bool Is_Download_Only { get; set; }

        ///<summary>The cart has VAT tax</summary>
        public bool Has_Vat { get; set; }

        ///<summary>The selected shipping option identifier for the cart</summary>
        public ShippingOption Shipping_Option { get; set; }

        ///<summary>The shop</summary>
        public Shop Shop { get; set; }

        ///<summary>An array of listings</summary>
        public Listing[] Listings { get; set; }

        ///<summary>Available shipping options for the cart</summary>
        public ShippingOption[] ShippingOptions { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/imagetype
    public class ImageType
    {

        ///<summary>Code for this image type, used in image URLs</summary>
        public string Code { get; set; }

        ///<summary>Text description of the image type</summary>
        public string Desc { get; set; }

        ///<summary>Available sizes for this image type</summary>
        public string[] Sizes { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/ledger
    public class Ledger
    {

        ///<summary>The ledger's numeric ID.</summary>
        public int Ledger_Id { get; set; }

        ///<summary>The shop's numeric ID.</summary>
        public string Shop_Id { get; set; }

        ///<summary>The currency code of the shop.</summary>
        public string Currency { get; set; }

        ///<summary>The date and time the ledger was created in Epoch seconds.</summary>
        public int Create_Date { get; set; }

        ///<summary>The date and time the ledger was last updated in Epoch seconds.</summary>
        public int Update_Date { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/ledgerentry
    public class LedgerEntry
    {

        ///<summary>The ledger entry's numeric ID.</summary>
        public int Ledger_Entry_Id { get; set; }

        ///<summary>The ledger's numeric ID.</summary>
        public int Ledger_Id { get; set; }

        ///<summary>The sequence allows ledger entries to be sorted chronologically. The higher the sequence, the more recent the entry.</summary>
        public int Sequence { get; set; }

        ///<summary>The amount of money credited to the ledger.</summary>
        public int Credit_Amount { get; set; }

        ///<summary>The amount of money debited from the ledger.</summary>
        public int Debit_Amount { get; set; }

        ///<summary>Details what kind of ledger entry this is: a payment, refund, reversal of a failed refund, disbursement, returned disbursement, recoupment, miscellaneous credit, miscellaneous debit, or bill payment</summary>
        public string Entry_Type { get; set; }

        ///<summary>Depending on the entry_type, this is the id of the corresponding payment, payment adjustment, or disbursement.</summary>
        public int Reference_Id { get; set; }

        ///<summary>The amount of money in the shop's ledger the moment after this entry was applied.</summary>
        public int Running_Balance { get; set; }

        ///<summary>The date and time the ledger entry was created in Epoch seconds.</summary>
        public int Create_Date { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/listing
    public class Listing
    {

        ///<summary>The listing's numeric ID.</summary>
        public int Listing_Id { get; set; }

        ///<summary>One of active, removed, sold_out, expired, alchemy, edit, create, private, or unavailable.</summary>
        public string State { get; set; }

        ///<summary>The numeric ID of the user who posted the item.</summary>
        public int User_Id { get; set; }

        ///<summary>The numeric ID of the listing's category.</summary>
        public int Category_Id { get; set; }

        ///<summary>The listing's title. This string is valid if it does not match the following pattern: /[^\p{L}\p{Nd}\p{P}\p{Sm}\p{Zs}™©®]/u. The characters %, :, &amp; and + can only be used once each.</summary>
        public string Title { get; set; }

        ///<summary>A description of the item.</summary>
        public string Description { get; set; }

        ///<summary>Creation time, in epoch seconds.</summary>
        public float Creation_Tsz { get; set; }

        ///<summary>The listing's expiration date and time, in epoch seconds.</summary>
        public float Ending_Tsz { get; set; }

        ///<summary>The date and time the listing was originally posted, in epoch seconds.</summary>
        public float Original_Creation_Tsz { get; set; }

        ///<summary>The date and time the listing was updated, in epoch seconds.</summary>
        public float Last_Modified_Tsz { get; set; }

        ///<summary>The item's price (will be treated as private for sold listings).Note: The price is the minimum possible price. The getInventory method will detail exact prices for available offerings.</summary>
        public string Price { get; set; }

        ///<summary>The ISO (alphabetic) code for the item's currency.</summary>
        public string Currency_Code { get; set; }

        ///<summary>The quantity of this item available for sale.Note: The quantity is the total number of available offerings. The getInventory method will detail quantities for individual offerings.</summary>
        public int Quantity { get; set; }

        ///<summary>A list of distinct SKUs applied to a listing.</summary>
        public string[] Sku { get; set; }

        ///<summary>A list of tags for the item. A tag is valid if it does not match the pattern: /[^\p{L}\p{Nd}\p{Zs}\-'™©®]/u</summary>
        public string[] Tags { get; set; }

        ///<summary>Name of the category of the item and the names of categories in that hierarchy.</summary>
        public string[] Category_Path { get; set; }

        ///<summary>The numeric ID of each category in the this Listing's category hierarchy.</summary>
        public int[] Category_Path_Ids { get; set; }

        ///<summary>The seller taxonomy id of the listing.</summary>
        public int Taxonomy_Id { get; set; }

        ///<summary>Etsy's suggestion for the seller taxonomy_id for this listing. Etsy makes this suggestion if the listing does not have a taxonomy_id chosen by the seller.</summary>
        public int Suggested_Taxonomy_Id { get; set; }

        ///<summary>The name of the taxonomy node of the item and the names of that node's parents</summary>
        public string[] Taxonomy_Path { get; set; }

        ///<summary>A list of materials used in the item. A material is valid if it does not match the pattern: /[^\p{L}\p{Nd}\p{Zs}]/u</summary>
        public string[] Materials { get; set; }

        ///<summary>The numeric ID of the shop section for this listing, can be null</summary>
        public int Shop_Section_Id { get; set; }

        ///<summary>Position in the Featured Listings portion of the shop</summary>
        public string Featured_Rank { get; set; }

        ///<summary>The time at which the listing last changed state.</summary>
        public float State_Tsz { get; set; }

        ///<summary>The full URL to the listing's page on Etsy.</summary>
        public string Url { get; set; }

        ///<summary>The number of times the listing has been viewed on Etsy.com (does not include API views).</summary>
        public int Views { get; set; }

        ///<summary>The number of members who've marked this Listing as a favorite</summary>
        public int Num_Favorers { get; set; }

        ///<summary>The numeric ID of the shipping template associated with the listing.</summary>
        public string Shipping_Template_Id { get; set; }

        ///<summary>The minimum number of days for processing for this listing.</summary>
        public int Processing_Min { get; set; }

        ///<summary>The maximum number of days for processing for this listing.</summary>
        public int Processing_Max { get; set; }

        ///<summary>Who made the item being listed.</summary>
        public string Who_Made { get; set; }

        ///<summary>True if the listing is a supply.</summary>
        public bool Is_Supply { get; set; }

        ///<summary>When was the item made.</summary>
        public string When_Made { get; set; }

        ///<summary>How much the item weighs.</summary>
        public int Item_Weight { get; set; }

        ///<summary>The units used to represent the weight of this item.</summary>
        public string Item_Weight_Unit { get; set; }

        ///<summary>How long the item is.</summary>
        public int Item_Length { get; set; }

        ///<summary>How wide the item is.</summary>
        public string Item_Width { get; set; }

        ///<summary>How tall the item is.</summary>
        public int Item_Height { get; set; }

        ///<summary>The units used to represent the dimensions of this item.</summary>
        public string Item_Dimensions_Unit { get; set; }

        ///<summary>Is this listing a private listing that is intendend for a specific buyer and hidden from shop view.Note: This field is experimental and may change at any time.</summary>
        public bool Is_Private { get; set; }

        ///<summary>Who is this listing for.</summary>
        public string Recipient { get; set; }

        ///<summary>What is the occasion for this listing.</summary>
        public string Occasion { get; set; }

        ///<summary>Style of this listing. Each style is a free-form text string such as "Formal", or "Steampunk". A Listing may have up to two styles. A style is valid if it does not match the pattern: /[^\p{L}\p{Nd}\p{Zs}]/u</summary>
        public string[] Style { get; set; }

        ///<summary>If this flag is true, any applicable shop tax rates will not be applied to this listing on checkout.</summary>
        public bool Non_Taxable { get; set; }

        ///<summary>If this flag is true, a buyer may contact the seller for a customized order. Can only be set when the shop accepts custom orders and defaults to true in that case.</summary>
        public bool Is_Customizable { get; set; }

        ///<summary>True if this listing is for a digital download.</summary>
        public bool Is_Digital { get; set; }

        ///<summary>Written description of the files attached to this digital listing.</summary>
        public string File_Data { get; set; }

        ///<summary>True if this listing can be updated with the new inventory endpoints</summary>
        public bool Can_Write_Inventory { get; set; }

        ///<summary>True if variations are available for this Listing.</summary>
        public bool Has_Variations { get; set; }

        ///<summary>True if this listing has been set to automatic renewals.</summary>
        public bool Should_Auto_Renew { get; set; }

        ///<summary>The IETF language tag (e.g. 'fr') for the language in which the listing is returned.</summary>
        public string Language { get; set; }

        ///<summary>The user who posted the listing.</summary>
        public User User { get; set; }

        ///<summary>The shop to which the listing belongs.</summary>
        public Shop Shop { get; set; }

        ///<summary>The shop section to which the listing belongs.</summary>
        public ShopSection Section { get; set; }

        ///<summary>An array of images for the listing, can include up to 10 images.</summary>
        public ListingImage[] Images { get; set; }

        ///<summary>The main image associated with this Listing</summary>
        public ListingImage MainImage { get; set; }

        ///<summary>An array of destinations and shipping prices for this listing.</summary>
        public ShippingInfo[] ShippingInfo { get; set; }

        ///<summary>The linked shipping template</summary>
        public ShippingTemplate ShippingTemplate { get; set; }

        ///<summary>An array of shipping upgrades for this listing.</summary>
        public ShippingUpgrade[] ShippingUpgrades { get; set; }

        ///<summary>An array of accepted payment methods for this listing.</summary>
        public PaymentTemplate[] PaymentInfo { get; set; }

        ///<summary>An array of translations for this Listing.</summary>
        public ListingTranslation[] Translations { get; set; }

        ///<summary>An array of attributes for this Listing.</summary>
        public PropertyValue[] Attributes { get; set; }

        ///<summary>An array of inventory data for this Listing.Note: This can only be used with the getListing, createListing, and updateListing methods.</summary>
        public ListingInventory Inventory { get; set; }

        ///<summary>Associations of variations and images</summary>
        public ListingVariationImage VariationImage { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/listingfile
    public class ListingFile
    {

        ///<summary>The numeric ID of the listing file.</summary>
        public int Listing_File_Id { get; set; }

        ///<summary>The numeric ID of the listing the file belongs to.</summary>
        public int Listing_Id { get; set; }

        ///<summary>Display order.</summary>
        public int Rank { get; set; }

        ///<summary>The file's displayable name.</summary>
        public string Filename { get; set; }

        ///<summary>The file's size in a displayable format.</summary>
        public string Filesize { get; set; }

        ///<summary>The file's size in raw bytes.</summary>
        public int Size_Bytes { get; set; }

        ///<summary>The file's mimetype.</summary>
        public string Filetype { get; set; }

        ///<summary>The time when this file was uploaded, in Epoch seconds.</summary>
        public int Create_Date { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/listingimage
    public class ListingImage
    {

        ///<summary>The numeric ID of the listing image.</summary>
        public int Listing_Image_Id { get; set; }

        ///<summary>The image's average color, in webhex notation.</summary>
        public string Hex_Code { get; set; }

        ///<summary>The image's average red value, 0-255 (RGB color).</summary>
        public int Red { get; set; }

        ///<summary>The image's average green value, 0-255 (RGB color).</summary>
        public int Green { get; set; }

        ///<summary>The image's average blue value, 0-255 (RGB color).</summary>
        public int Blue { get; set; }

        ///<summary>The image's average hue, 0-360 (HSV color).</summary>
        public int Hue { get; set; }

        ///<summary>The image's average saturation, 0-100 (HSV color).</summary>
        public int Saturation { get; set; }

        ///<summary>The image's average brightness, 0-100 (HSV color).</summary>
        public int Brightness { get; set; }

        ///<summary>True if the image is in black & white.</summary>
        public bool Is_Black_And_White { get; set; }

        ///<summary>Creation time, in epoch seconds.</summary>
        public float Creation_Tsz { get; set; }

        ///<summary>The numeric value of the listing id the image belongs to.</summary>
        public int Listing_Id { get; set; }

        ///<summary>Display order.</summary>
        public int Rank { get; set; }

        ///<summary>The url to a 75x75 thumbnail of the image.</summary>
        public string Url_75x75 { get; set; }

        ///<summary>The url to a 170x135 thumbnail of the image.</summary>
        public string Url_170x135 { get; set; }

        ///<summary>The url to a thumbnail of the image, no more than 570px width by variable height.</summary>
        public string Url_570xN { get; set; }

        ///<summary>The url to the full-size image, up to 3000px in each dimension.</summary>
        public string Url_Fullxfull { get; set; }

        ///<summary>Height of the image returned by url_fullxfull.</summary>
        public int Full_Height { get; set; }

        ///<summary>Width of the image returned by url_fullxfull.</summary>
        public int Full_Width { get; set; }

        ///<summary>The listing to which the image belongs.</summary>
        public Listing Listing { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/listinginventory
    public class ListingInventory
    {

        ///<summary>The products available for this listing.</summary>
        public ListingProduct[] Products { get; set; }

        ///<summary>Which properties control price?</summary>
        public int[] Price_On_Property { get; set; }

        ///<summary>Which properties control quantity?</summary>
        public int[] Quantity_On_Property { get; set; }

        ///<summary>Which properties control SKU?</summary>
        public int[] Sku_On_Property { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/listingoffering
    public class ListingOffering
    {

        ///<summary>The numeric ID of this offering.</summary>
        public string Offering_Id { get; set; }

        ///<summary>The price of the product</summary>
        public Money Price { get; set; }

        ///<summary>How many of this product are available?</summary>
        public int Quantity { get; set; }

        ///<summary>Is the offering shown to buyers?</summary>
        public bool Is_Enabled { get; set; }

        ///<summary>Has the offering been deleted?</summary>
        public bool Is_Deleted { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/listingproduct
    public class ListingProduct
    {

        ///<summary>The numeric ID of this product.</summary>
        public string Product_Id { get; set; }

        ///<summary>A list of 0-2 properties associated with this product and their values.</summary>
        public PropertyValue[] Property_Values { get; set; }

        ///<summary>The product identifier (if set).</summary>
        public string Sku { get; set; }

        ///<summary>A JSON list of active offerings for this product.</summary>
        public ListingOffering[] Offerings { get; set; }

        ///<summary>Has the product been deleted?</summary>
        public bool Is_Deleted { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/listingtranslation
    public class ListingTranslation
    {

        ///<summary>The numeric ID for the Listing.</summary>
        public int Listing_Id { get; set; }

        ///<summary>The IETF language tag (e.g. 'fr') for the language of this translation.</summary>
        public string Language { get; set; }

        ///<summary>The title of the Listing of this Translation.</summary>
        public string Title { get; set; }

        ///<summary>The description of the Listing of this Translation.</summary>
        public string Description { get; set; }

        ///<summary>The tags of the Listing of this Translation.</summary>
        public string[] Tags { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/listingvariationimage
    public class ListingVariationImage
    {

        ///<summary>The variation images on a listing. An array with inputs for the property_id, value_id, and image_id fields.</summary>
        public Dictionary<string, string> Variation_Images { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/money
    public class Money
    {

        ///<summary>The amount of money represented by this data.</summary>
        public int Amount { get; set; }

        ///<summary>The divisor to render the amount</summary>
        public int Divisor { get; set; }

        ///<summary>The requested locale currency.</summary>
        public string Currency_Code { get; set; }

        ///<summary>The formatted amount without codes or symbols in the requested locale's numeric style, e.g. '10.42'.</summary>
        public string Formatted_Raw { get; set; }

        ///<summary>The formatted amount with a symbol in the requested locale's numeric style, e.g. 'US$10.42'.</summary>
        public string Formatted_Short { get; set; }

        ///<summary>The formatted amount with a symbol and currency in the requested locale's numeric style, e.g. '$10.42 USD'.</summary>
        public string Formatted_Long { get; set; }

        ///<summary>A representation of the value without currency conversion (if conversion has happened).</summary>
        public Money Before_Conversion { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/paramlist
    public class ParamList
    {

        ///<summary>Each field in the record represents an Etsy API method parameter.  The value corresponds to one of the documented data or resource types.</summary>
        public string Param_Name { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/payment
    public class Payment
    {

        ///<summary>The payment's numeric ID.</summary>
        public int Payment_Id { get; set; }

        ///<summary>The buyer's numeric ID.</summary>
        public int Buyer_User_Id { get; set; }

        ///<summary>The shop's numeric ID.</summary>
        public int Shop_Id { get; set; }

        ///<summary>The receipt's numeric ID.</summary>
        public int Receipt_Id { get; set; }

        ///<summary>The original gross amount of the order, in pennies - this is grand total, including shipping and taxes.</summary>
        public int Amount_Gross { get; set; }

        ///<summary>The original card processing fee of the order in pennies.</summary>
        public int Amount_Fees { get; set; }

        ///<summary>The total value of the payment less fees (amount_gross - amount_fees).</summary>
        public int Amount_Net { get; set; }

        ///<summary>The gross amount which posted to the ledger once shipped. This is equal to the amount_gross UNLESS the seller issues a refund prior to shipping. We consider "shipping" to the event which "posts" to the ledger. Therefore, if the seller refunds first, we simply reduce the amount_gross and post that amount. The seller never sees the refunded amount in their ledger. This is equal to the "Credit" amount in the ledger entry.</summary>
        public int Posted_Gross { get; set; }

        ///<summary>Amount of the fees that posted when shipped. We refund a proportional amount of the fees when a seller refunds a buyer. If they refund prior to shipping, the posted amount will be less then the original.</summary>
        public int Posted_Fees { get; set; }

        ///<summary>The total value of the payment at the time of posting it to the ledger less fees (posted_gross - posted_fees)</summary>
        public int Posted_Net { get; set; }

        ///<summary>If the payment is refunded, partially or fully, this is the new gross amount after the refund.</summary>
        public int Adjusted_Gross { get; set; }

        ///<summary>If the payment is refunded, partially or fully, this is the new fee amount after the refund.</summary>
        public int Adjusted_Fees { get; set; }

        ///<summary>The total value of the payment after refunds less fees (adjusted_gross - adjusted_fees).</summary>
        public int Adjusted_Net { get; set; }

        ///<summary>What currency the payment was made in.</summary>
        public string Currency { get; set; }

        ///<summary>The currency of the shop.</summary>
        public string Shop_Currency { get; set; }

        ///<summary>The currency of the buyer.</summary>
        public string Buyer_Currency { get; set; }

        ///<summary>The numeric id of the user to which the order is being shipped.</summary>
        public int Shipping_User_Id { get; set; }

        ///<summary>The numeric id identifying the shipping address.</summary>
        public int Shipping_Address_Id { get; set; }

        ///<summary>The numeric id identifying the billing address of the buyer.</summary>
        public int Billing_Address_Id { get; set; }

        ///<summary>Most commonly "settled" or "authed". Marks the current status of the payment.</summary>
        public string Status { get; set; }

        ///<summary>The date and time the payment was shipped in Epoch seconds.</summary>
        public int Shipped_Date { get; set; }

        ///<summary>The date and time the payment was created in Epoch seconds.</summary>
        public int Create_Date { get; set; }

        ///<summary>The date and time the payment was last updated in Epoch seconds.</summary>
        public int Update_Date { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/paymentaccountledgerentry
    public class PaymentAccountLedgerEntry
    {

        ///<summary>The ledger entry's numeric ID.</summary>
        public int Entry_Id { get; set; }

        ///<summary>The ledger's numeric ID.</summary>
        public int Ledger_Id { get; set; }

        ///<summary>The sequence allows ledger entries to be sorted chronologically. The higher the sequence, the more recent the entry.</summary>
        public int Sequence_Number { get; set; }

        ///<summary>The amount of money credited to the ledger.</summary>
        public int Amount { get; set; }

        ///<summary>The currency of the entry on the ledger.</summary>
        public string Currency { get; set; }

        ///<summary>Details what kind of ledger entry this is: a payment, refund, reversal of a failed refund, disbursement, returned disbursement, recoupment, miscellaneous credit, miscellaneous debit, or bill payment</summary>
        public string Description { get; set; }

        ///<summary>The amount of money in the shop's ledger the moment after this entry was applied.</summary>
        public int Balance { get; set; }

        ///<summary>The date and time the ledger entry was created in Epoch seconds.</summary>
        public int Create_Date { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/paymentadjustment
    public class PaymentAdjustment
    {

        ///<summary>The payment adjustment's numeric ID.</summary>
        public int Payment_Adjustment_Id { get; set; }

        ///<summary>The payment's numeric ID.</summary>
        public int Payment_Id { get; set; }

        ///<summary>The status of the Payment Adjustment. Can be OPEN, REFUNDED, ERROR, or REFUND_FAILED.</summary>
        public string Status { get; set; }

        ///<summary>Whether the Payment Adjustment was successful or will likely be completed successfully.</summary>
        public bool Is_Success { get; set; }

        ///<summary>The seller's numeric ID.</summary>
        public int User_Id { get; set; }

        ///<summary>A human-readable string describing the need for the refund.</summary>
        public string Reason_Code { get; set; }

        ///<summary>The total amount of the refund in the payment currency.</summary>
        public int Total_Adjustment_Amount { get; set; }

        ///<summary>The total amount of the refund in the shop currency.</summary>
        public int Shop_Total_Adjustment_Amount { get; set; }

        ///<summary>The total amount of the refund in the buyer currency.</summary>
        public int Buyer_Total_Adjustment_Amount { get; set; }

        ///<summary>The amount of card processing fees associated with this adjustment.</summary>
        public int Total_Fee_Adjustment_Amount { get; set; }

        ///<summary>The date and time the payment adjustment was created in Epoch seconds.</summary>
        public int Create_Date { get; set; }

        ///<summary>The date and time the payment adjustment was last updated in Epoch seconds.</summary>
        public int Update_Date { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/paymentadjustmentitem
    public class PaymentAdjustmentItem
    {

        ///<summary>The payment adjustment item's numeric ID.</summary>
        public int Payment_Adjustment_Item_Id { get; set; }

        ///<summary>The payment adjustment's numeric ID.</summary>
        public int Payment_Adjustment_Id { get; set; }

        ///<summary>A human readable string describing the area being refundedOne of: TRANS, TAX, or SHIP</summary>
        public string Adjustment_Type { get; set; }

        ///<summary>The total amount of the payment adjustment item.</summary>
        public int Amount { get; set; }

        ///<summary>The numerice ID of the Credit Card Transaction</summary>
        public int Transaction_Id { get; set; }

        ///<summary>The date and time the payment adjustment item was created in Epoch seconds.</summary>
        public int Create_Date { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/paymenttemplate
    public class PaymentTemplate
    {

        ///<summary>The numeric ID for this payment template</summary>
        public int Payment_Template_Id { get; set; }

        ///<summary>True if the seller accepts bank transfers for payment</summary>
        public bool Allow_Bt { get; set; }

        ///<summary>True if the seller accepts checks for payment</summary>
        public bool Allow_Check { get; set; }

        ///<summary>True if the seller accepts money order payments</summary>
        public bool Allow_Mo { get; set; }

        ///<summary>True if the seller accepts other payments</summary>
        public bool Allow_Other { get; set; }

        ///<summary>True if the seller accepts paypal</summary>
        public bool Allow_Paypal { get; set; }

        ///<summary>True if the seller accepts credit cards</summary>
        public bool Allow_Cc { get; set; }

        ///<summary>The users paypal email address.</summary>
        public string Paypal_Email { get; set; }

        ///<summary>The name of the seller.</summary>
        public string Name { get; set; }

        ///<summary>The first line of the seller's address.</summary>
        public string First_Line { get; set; }

        ///<summary>The second line of the seller's address.</summary>
        public string Second_Line { get; set; }

        ///<summary>The seller's city.</summary>
        public string City { get; set; }

        ///<summary>The seller's state.</summary>
        public string State { get; set; }

        ///<summary>The seller's zip code.</summary>
        public string Zip { get; set; }

        ///<summary>The seller's country.</summary>
        public int Country_Id { get; set; }

        ///<summary>The user's numeric ID.</summary>
        public int User_Id { get; set; }

        ///<summary>Provided for backward compatibility to ListingPayment. This will return the same value as payment_template_id.</summary>
        public int Listing_Payment_Id { get; set; }

        ///<summary>The full Country record of the shop's country.</summary>
        public Country Country { get; set; }

        ///<summary>The User that owns this payment template</summary>
        public User User { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/propertyvalue
    public class PropertyValue
    {

        ///<summary>The numeric ID of this property.</summary>
        public string Property_Id { get; set; }

        ///<summary>The name of the property, in the requested locale language.</summary>
        public string Property_Name { get; set; }

        ///<summary>The numeric ID of the scale (if any).</summary>
        public int Scale_Id { get; set; }

        ///<summary>The label used to describe the chosen scale (if any).</summary>
        public string Scale_Name { get; set; }

        ///<summary>The numeric IDs of the values.</summary>
        public string[] Value_Ids { get; set; }

        ///<summary>The literal values of the value.</summary>
        public string[] Values { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/receipt
    public class Receipt
    {

        ///<summary>The receipt's numeric ID.</summary>
        public int Receipt_Id { get; set; }

        ///<summary>The enum of the order type this receipt is associated with.</summary>
        public int Receipt_Type { get; set; }

        ///<summary>The numeric ID of the order this receipt is associated with.</summary>
        public int Order_Id { get; set; }

        ///<summary>The numeric ID of the seller for this receipt.</summary>
        public int Seller_User_Id { get; set; }

        ///<summary>The numeric ID of the buyer for this receipt.</summary>
        public int Buyer_User_Id { get; set; }

        ///<summary>Creation time, in epoch seconds.</summary>
        public float Creation_Tsz { get; set; }

        ///<summary>Creation time, in epoch seconds.</summary>
        public bool Can_Refund { get; set; }

        ///<summary>Last modification time, in epoch seconds.</summary>
        public float Last_Modified_Tsz { get; set; }

        ///<summary>The name portion of the buyer's address.</summary>
        public string Name { get; set; }

        ///<summary>The first line of the buyer's address.</summary>
        public string First_Line { get; set; }

        ///<summary>The second line of the buyer's address.</summary>
        public string Second_Line { get; set; }

        ///<summary>The city for the buyer's address.</summary>
        public string City { get; set; }

        ///<summary>The state for the buyer's address.</summary>
        public string State { get; set; }

        ///<summary>The zip code of the buyer's address.</summary>
        public string Zip { get; set; }

        ///<summary>The locally formatted address strng of the buyer's shipping address.</summary>
        public string Formatted_Address { get; set; }

        ///<summary>The numeric ID of the buyer's country.</summary>
        public int Country_Id { get; set; }

        ///<summary>The payment method used. May be pp, cc, ck, mo, or other (stands for paypal, credit card, check, money order, other).</summary>
        public string Payment_Method { get; set; }

        ///<summary>The email address where payment confirmation is sent.</summary>
        public string Payment_Email { get; set; }

        ///<summary>An optional message from the seller.</summary>
        public string Message_From_Seller { get; set; }

        ///<summary>An optional message from the buyer.</summary>
        public string Message_From_Buyer { get; set; }

        ///<summary>True if the receipt was paid.</summary>
        public bool Was_Paid { get; set; }

        ///<summary>The total sales tax of the receipt.</summary>
        public float Total_Tax_Cost { get; set; }

        ///<summary>The total VAT of the receipt.</summary>
        public float Total_Vat_Cost { get; set; }

        ///<summary>Sum of the individual listings' (price * quantity). Does not included tax or shipping costs.</summary>
        public float Total_Price { get; set; }

        ///<summary>The total shipping cost of the receipt.</summary>
        public float Total_Shipping_Cost { get; set; }

        ///<summary>The ISO code (alphabetic) for the seller's native currency.</summary>
        public string Currency_Code { get; set; }

        ///<summary>The machine generated acknowledgement from the payment system.</summary>
        public string Message_From_Payment { get; set; }

        ///<summary>True if the items in the receipt were shipped.</summary>
        public bool Was_Shipped { get; set; }

        ///<summary>The email address of the buyer. Access to this field is granted on a case by case basis for third-party integrations that require full access. Sellers using private apps to manage their shops can still access this field.</summary>
        public string Buyer_Email { get; set; }

        ///<summary>The email address of the seller.</summary>
        public string Seller_Email { get; set; }

        ///<summary>Whether the buyer marked item as a gift.</summary>
        public bool Is_Gift { get; set; }

        ///<summary>Whether the buyer purchased gift wrap.</summary>
        public bool Needs_Gift_Wrap { get; set; }

        ///<summary>The message the buyer wants sent with the gift.</summary>
        public string Gift_Message { get; set; }

        ///<summary>The gift wrap price of the receipt.</summary>
        public float Gift_Wrap_Price { get; set; }

        ///<summary>The total discount for the receipt, if using a discount (percent or fixed) Coupon. Free shipping Coupons are not reflected here.</summary>
        public float Discount_Amt { get; set; }

        ///<summary>total_price minus coupon discounts. Does not included tax or shipping costs.</summary>
        public float Subtotal { get; set; }

        ///<summary>total_price minus coupon discount plus tax and shipping costs.</summary>
        public float Grandtotal { get; set; }

        ///<summary>grand total after payment adjustments.</summary>
        public float Adjusted_Grandtotal { get; set; }

        ///<summary>Shipment information associated to this receipt.</summary>
        public ReceiptShipment[] Shipments { get; set; }

        ///<summary>The country to which the order was shipped.</summary>
        public Country Country { get; set; }

        ///<summary>The buyer of the items in this receipt.</summary>
        public User Buyer { get; set; }

        ///<summary>The guest buyer of the items in this receipt.</summary>
        public Dictionary<string, string> GuestBuyer { get; set; }

        ///<summary>The seller of the items in this receipt.</summary>
        public User Seller { get; set; }

        ///<summary>The transactions associated to this receipt. You will find the personalization details for an order within the 'variations' arrays returned for this association.</summary>
        public Transaction[] Transactions { get; set; }

        ///<summary>The listings associated to this receipt. Please note that this association will return the current listing details, not the details at the time of purchase.</summary>
        public Listing[] Listings { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/receiptshipment
    public class ReceiptShipment
    {

        ///<summary>Shipping carrier name.</summary>
        public string Carrier_Name { get; set; }

        ///<summary>Receipt shipping id used internally</summary>
        public string Receipt_Shipping_Id { get; set; }

        ///<summary>Tracking code for carrier.</summary>
        public string Tracking_Code { get; set; }

        ///<summary>Tracking URL for carrier's website.</summary>
        public string Tracking_Url { get; set; }

        ///<summary>Optional note sent to buyer.</summary>
        public string Buyer_Note { get; set; }

        ///<summary>Date the notification was sent.</summary>
        public int Notification_Date { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/region
    public class Region
    {

        ///<summary>The numeric ID of this region.</summary>
        public int Region_Id { get; set; }

        ///<summary>The name of the region.</summary>
        public string Region_Name { get; set; }

        ///<summary>The eligibilty of this region to be used</summary>
        public bool Is_Dead { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/segment
    public class Segment
    {

        ///<summary>The formatted name for this Segment</summary>
        public string Name { get; set; }

        ///<summary>The sequence of slugified names leading up to (and including) this Segment, separated by period characters</summary>
        public string Path { get; set; }

        ///<summary>The slugified name of this Segment</summary>
        public string Short_Name { get; set; }

        ///<summary>Whether this Segment has more Segments under it</summary>
        public bool Has_Children { get; set; }

        ///<summary>(Optional) A fullxfull image representing this Segment</summary>
        public string Image_Url { get; set; }

        ///<summary>(Optional) The shop_id of the Shop from which the image_url was chosen</summary>
        public int Shop_Id { get; set; }

        ///<summary>(Optional) The name of the Shop from which the image_url was chosen</summary>
        public int Shop_Name { get; set; }

        ///<summary>(Optional) The id of the listing from which the image_url was chosen.</summary>
        public int Listing_Id { get; set; }

        ///<summary>The main image for the listing.</summary>
        public ListingImage MainImage { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/segmentposter
    public class SegmentPoster
    {

        ///<summary>The formatted name for this SegmentPoster</summary>
        public string Name { get; set; }

        ///<summary>The sequence of slugified names leading to a Segment represented by this SegmentPoster</summary>
        public string Path { get; set; }

        ///<summary>A fullxfull image representing this SegmentPoster's content</summary>
        public string Image_Url { get; set; }

        ///<summary>(Optional) The id of the Shop from which the image_url was chosen</summary>
        public int Shop_Id { get; set; }

        ///<summary>(Optional) The name of the Shop from which the image_url was chosen</summary>
        public int Shop_Name { get; set; }

        ///<summary>A number starting at 1 representing how prominent this SegmentPoster is relative to other SegmentPosters</summary>
        public int Weight { get; set; }

        ///<summary>(Optional) The id of the listing from which the image_url was chosen.</summary>
        public int Listing_Id { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/shippinginfo
    public class ShippingInfo
    {

        ///<summary>The numeric ID of this shipping info record.</summary>
        public int Shipping_Info_Id { get; set; }

        ///<summary>The numeric ID of the country from which the listing ships.</summary>
        public int Origin_Country_Id { get; set; }

        ///<summary>The numeric ID of the country to which the listing ships (optional). If missing, these fees apply to all destinations.</summary>
        public int Destination_Country_Id { get; set; }

        ///<summary>Identifies the currency unit for shipping fees (currently, always 'USD').</summary>
        public string Currency_Code { get; set; }

        ///<summary>The shipping fee for this item, if shipped alone.</summary>
        public float Primary_Cost { get; set; }

        ///<summary>The shipping fee for this item, if shipped with another item.</summary>
        public float Secondary_Cost { get; set; }

        ///<summary>The numeric ID of the listing to which this shipping info applies.</summary>
        public int Listing_Id { get; set; }

        ///<summary>The numeric ID of the region to which this shipping info applies (optional). If missing, no region is selected.  Regions are shorthand for lists of individual countries.</summary>
        public int Region_Id { get; set; }

        ///<summary>The name of the country from which this item ships.</summary>
        public string Origin_Country_Name { get; set; }

        ///<summary>The name of the country to which this item ships.</summary>
        public string Destination_Country_Name { get; set; }

        ///<summary>The full Country record for the shipping destination.</summary>
        public Country DestinationCountry { get; set; }

        ///<summary>The full Country record for the shipping origin.</summary>
        public Country OriginCountry { get; set; }

        ///<summary>The full Region record for the shipping destination region.</summary>
        public Region Region { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/shippingoption
    public class ShippingOption
    {

        ///<summary>The ID of the shipping option.</summary>
        public string Option_Id { get; set; }

        ///<summary>The name of the shipping option.</summary>
        public string Name { get; set; }

        ///<summary>The type of shipping option.</summary>
        public int Option_Type { get; set; }

        ///<summary>The total cart shipping price if the shipping option is selected.</summary>
        public string Cost { get; set; }

        ///<summary>The ISO (alphabetic) code for the shipping option's currency.</summary>
        public string Currency_Code { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/shippingtemplate
    public class ShippingTemplate
    {

        ///<summary>The numeric ID of this shipping template.</summary>
        public int Shipping_Template_Id { get; set; }

        ///<summary>The name of this shipping template.</summary>
        public string Title { get; set; }

        ///<summary>The numeric ID of the user who owns this shipping template.</summary>
        public int User_Id { get; set; }

        ///<summary>The minimum number of days for processing the listing.</summary>
        public int Min_Processing_Days { get; set; }

        ///<summary>The maximum number of days for processing the listing.</summary>
        public int Max_Processing_Days { get; set; }

        ///<summary>Translated display label for processing days.</summary>
        public string Processing_Days_Display_Label { get; set; }

        ///<summary>The numeric ID of the country from which the listing ships.</summary>
        public int Origin_Country_Id { get; set; }

        ///<summary>An array of shipping info entries that belong to this template.</summary>
        public ShippingTemplateEntry[] Entries { get; set; }

        ///<summary>An array of shipping upgrades for this shipping template.</summary>
        public ShippingUpgrade[] Upgrades { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/shippingtemplateentry
    public class ShippingTemplateEntry
    {

        ///<summary>The numeric ID of this shipping template entry.</summary>
        public int Shipping_Template_Entry_Id { get; set; }

        ///<summary>The numeric ID of the template this entry belongs to.</summary>
        public int Shipping_Template_Id { get; set; }

        ///<summary>The currency code for the prices in this template entry.</summary>
        public string Currency_Code { get; set; }

        ///<summary>The numeric ID of the country from which the listing ships.</summary>
        public int Origin_Country_Id { get; set; }

        ///<summary>The numeric ID of the country to which the listing ships (optional).  If missing, these fees apply to all destinations.</summary>
        public int Destination_Country_Id { get; set; }

        ///<summary>The numeric ID of the region to which the listing ships (optional).  Regions are collections of countries.</summary>
        public int Destination_Region_Id { get; set; }

        ///<summary>The shipping fee for this item, if shipped alone.</summary>
        public float Primary_Cost { get; set; }

        ///<summary>The shipping fee for this item, if shipped with another item.</summary>
        public float Secondary_Cost { get; set; }

        ///<summary>The full Country record for the shipping origin.</summary>
        public Country OriginCountry { get; set; }

        ///<summary>The full Country record for the shipping destination.</summary>
        public Country DestinationCountry { get; set; }

        ///<summary>The full Region record for the shipping destination region.</summary>
        public Region DestinationRegion { get; set; }

        ///<summary>The template to which this entry belongs.</summary>
        public ShippingTemplate Template { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/shippingupgrade
    public class ShippingUpgrade
    {

        ///<summary>Identifier for the parent shipping profile</summary>
        public int Shipping_Profile_Id { get; set; }

        ///<summary>Identifier for the value</summary>
        public int Value_Id { get; set; }

        ///<summary>Name of the shipping upgrade, e.g. USPS Priority</summary>
        public string Value { get; set; }

        ///<summary>Additional cost of adding the shipping upgrade</summary>
        public float Price { get; set; }

        ///<summary>Additional cost of adding the shipping upgrade with another item</summary>
        public float Secondary_Price { get; set; }

        ///<summary>Currency for the price</summary>
        public string Currency_Code { get; set; }

        ///<summary>Domestic (0) or international (1)</summary>
        public int Type { get; set; }

        ///<summary>Display order</summary>
        public int Order { get; set; }

        ///<summary>Language code</summary>
        public int Language { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/shop
    public class Shop
    {

        ///<summary>The shop's numeric ID.</summary>
        public int Shop_Id { get; set; }

        ///<summary>The shop's name.</summary>
        public string Shop_Name { get; set; }

        ///<summary>The numeric ID of the user that owns this shop.</summary>
        public int User_Id { get; set; }

        ///<summary>The date and time the shop was created, in epoch seconds.</summary>
        public float Creation_Tsz { get; set; }

        ///<summary>A brief heading for the shop's main page.</summary>
        public string Title { get; set; }

        ///<summary>An announcement to buyers that displays on the shop's homepage.</summary>
        public string Announcement { get; set; }

        ///<summary>The ISO code (alphabetic) for the seller's native currency.</summary>
        public string Currency_Code { get; set; }

        ///<summary>If the seller is not currently accepting purchases, 1, blank otherwise.</summary>
        public bool Is_Vacation { get; set; }

        ///<summary>If is_vacation=1, a message to buyers.</summary>
        public string Vacation_Message { get; set; }

        ///<summary>A message that is sent to users who buy from this shop.</summary>
        public string Sale_Message { get; set; }

        ///<summary>A message that is sent to users who buy a digital item from this shop.</summary>
        public string Digital_Sale_Message { get; set; }

        ///<summary>The date and time the shop was last updated, in epoch seconds.</summary>
        public float Last_Updated_Tsz { get; set; }

        ///<summary>The number of active listings in the shop.</summary>
        public int Listing_Active_Count { get; set; }

        ///<summary>Number of digital listings the shop has.</summary>
        public int Digital_Listing_Count { get; set; }

        ///<summary>The user's login name.</summary>
        public string Login_Name { get; set; }

        ///<summary>The latitude of the shop.</summary>
        public float Lat { get; set; }

        ///<summary>The longitude of the shop.</summary>
        public float Lon { get; set; }

        ///<summary>True if the shop accepts requests for custom items.</summary>
        public bool Accepts_Custom_Requests { get; set; }

        ///<summary>The introductory text from the top of the seller's policies page (may be blank).</summary>
        public string Policy_Welcome { get; set; }

        ///<summary>The seller's policy on payment (may be blank).</summary>
        public string Policy_Payment { get; set; }

        ///<summary>The seller's policy on shipping (may be blank).</summary>
        public string Policy_Shipping { get; set; }

        ///<summary>The seller's policy on refunds (may be blank).</summary>
        public string Policy_Refunds { get; set; }

        ///<summary>Any additional policy information the seller provides (may be blank).</summary>
        public string Policy_Additional { get; set; }

        ///<summary>The shop's seller information (may be blank).</summary>
        public string Policy_Seller_Info { get; set; }

        ///<summary>The date and time the shop was last updated, in epoch seconds.</summary>
        public float Policy_Updated_Tsz { get; set; }

        ///<summary>True if seller has private info to show in EU receipts</summary>
        public bool Policy_Has_Private_Receipt_Info { get; set; }

        ///<summary>If is_vacation=1, a message to buyers in response to new convos.</summary>
        public string Vacation_Autoreply { get; set; }

        ///<summary>The shop's Google Analytics code.</summary>
        public string Ga_Code { get; set; }

        ///<summary>The URL of the shop</summary>
        public string Url { get; set; }

        ///<summary>The URL to the shop's banner image.</summary>
        public string Image_Url_760x100 { get; set; }

        ///<summary>The number of members who've marked this Shop as a favorite</summary>
        public int Num_Favorers { get; set; }

        ///<summary>The languages that this Shop is enrolled in.</summary>
        public string[] Languages { get; set; }

        ///<summary>the id of the next upcoming event this hops is attending, that is near the user.</summary>
        public string Upcoming_Local_Event_Id { get; set; }

        ///<summary>The url of the shop full-sized shop icon.</summary>
        public string Icon_Url_Fullxfull { get; set; }

        ///<summary>True if shop has accepted using structured policies.</summary>
        public bool Is_Using_Structured_Policies { get; set; }

        ///<summary>True if shop has viewed structured policies onboarding and accepted OR declined.</summary>
        public bool Has_Onboarded_Structured_Policies { get; set; }

        ///<summary>True if shop has any unstructured policy fields filled out.</summary>
        public bool Has_Unstructured_Policies { get; set; }

        ///<summary>Privacy policy information the seller provides (may be blank).</summary>
        public string Policy_Privacy { get; set; }

        ///<summary>Should this user's listings be created or edited using the new Inventory endpoints?</summary>
        public bool Use_New_Inventory_Endpoints { get; set; }

        ///<summary>True if shop policies include a link to EU online dispute form</summary>
        public bool Include_Dispute_Form_Link { get; set; }

        ///<summary>The user who owns this shop.</summary>
        public User User { get; set; }

        ///<summary>Detailed data about this shop.</summary>
        public ShopAbout About { get; set; }

        ///<summary>An array of sections within the shop. &nbsp;Each section holds listings.</summary>
        public ShopSection[] Sections { get; set; }

        ///<summary>An array of listings within the shop.&nbsp;&nbsp;(Must be used with scope "active", e.g.: Listings:active).(NOTE: If calling on behalf of a shop owner in the context of listing management, you may include the parameter include_private=true to return private listings. This is an experimental feature and may change.)</summary>
        public Listing[] Listings { get; set; }

        ///<summary>An array of receipts (one per buyer) for this shop.</summary>
        public Receipt[] Receipts { get; set; }

        ///<summary>An array of transactions (sold items) for this shop.</summary>
        public Transaction[] Transactions { get; set; }

        ///<summary>An array of translations for this Shop.</summary>
        public ShopTranslation[] Translations { get; set; }

        ///<summary>Association for structured policies.</summary>
        public StructuredPolicies StructuredPolicies { get; set; }

        ///<summary>Association for seller personal details.</summary>
        public Dictionary<string, string> SellerDetails { get; set; }

        ///<summary>Mocked association for frequently asked questions</summary>
        public Dictionary<string, string>[] FAQ { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/shopabout
    public class ShopAbout
    {

        ///<summary>Numeric ID of the shop section.</summary>
        public int Shop_Id { get; set; }

        ///<summary>Status of this data: active or draft. Only Shop owners can see drafts.</summary>
        public string Status { get; set; }

        ///<summary>ShopAbout headline text</summary>
        public string Story_Headline { get; set; }

        ///<summary>The first part of the ShopAbout story</summary>
        public string Story_Leading_Paragraph { get; set; }

        ///<summary>The full ShopAbout story text</summary>
        public string Story { get; set; }

        ///<summary>The ShopAbout related links</summary>
        public JObject Related_Links { get; set; }

        ///<summary>URL to the Shop About page on the site.</summary>
        public string Url { get; set; }

        ///<summary>The shop this detail data belongs to</summary>
        public Shop Shop { get; set; }

        ///<summary>The ShopAboutMembers of this Shop</summary>
        public ShopAboutMember[] Members { get; set; }

        ///<summary>An array of images to be included with ShopAbout details</summary>
        public Dictionary<string, string>[] Images { get; set; }

        ///<summary>The Shop_AboutVideos of this Shop</summary>
        public Dictionary<string, string>[] Videos { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/shopaboutimage
    public class ShopAboutImage
    {

        ///<summary>Numeric ID of the shop</summary>
        public int Shop_Id { get; set; }

        ///<summary>Numeric ID of the image record</summary>
        public int Image_Id { get; set; }

        ///<summary>Description of this ShopAboutImage</summary>
        public string Caption { get; set; }

        ///<summary>The order of this image in a list</summary>
        public int Rank { get; set; }

        ///<summary>The url to a thumbnail of the image, exactly 178px by 178px.</summary>
        public string Url_178x178 { get; set; }

        ///<summary>The url to a thumbnail of the image, no more than 545px width by variable height.</summary>
        public string Url_545xN { get; set; }

        ///<summary>The url to a thumbnail of the image, no more than 760px width by variable height.</summary>
        public string Url_760xN { get; set; }

        ///<summary>The url to the full-size image, no more than 1500px width by variable height.</summary>
        public string Url_Fullxfull { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/shopaboutmember
    public class ShopAboutMember
    {

        ///<summary>Numeric ID of this ShopAboutMember</summary>
        public int Shop_About_Member_Id { get; set; }

        ///<summary>Numeric ID of the associated Shop</summary>
        public int Shop_Id { get; set; }

        ///<summary>The name of this ShopAboutMember</summary>
        public string Name { get; set; }

        ///<summary>The role of this ShopAboutMember</summary>
        public string Role { get; set; }

        ///<summary>The bio of this ShopAboutMember</summary>
        public string Bio { get; set; }

        ///<summary>The order of this member in a list</summary>
        public int Rank { get; set; }

        ///<summary>Whether this Member is an owner. A Shop can have multiple owners.</summary>
        public bool Is_Owner { get; set; }

        ///<summary>The url to a thumbnail of the image, exactly 90px by 90px.</summary>
        public string Url_90x90 { get; set; }

        ///<summary>The url to a thumbnail of the image, exactly 190px by 190px.</summary>
        public string Url_190x190 { get; set; }

        ///<summary>Whether the shop member translations need to be updated</summary>
        public bool Has_Stale_Translations { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/shopsection
    public class ShopSection
    {

        ///<summary>The numeric ID of the shop section.</summary>
        public int Shop_Section_Id { get; set; }

        ///<summary>The title of the section.</summary>
        public string Title { get; set; }

        ///<summary>Display order.</summary>
        public int Rank { get; set; }

        ///<summary>The ID of the user who owns this shop section.</summary>
        public int User_Id { get; set; }

        ///<summary>The number of active listings currently in the section.</summary>
        public int Active_Listing_Count { get; set; }

        ///<summary>The shop to which this section belongs.</summary>
        public Shop Shop { get; set; }

        ///<summary>An array of listings in this section.</summary>
        public Listing[] Listings { get; set; }

        ///<summary>An array of translations for this ShopSection.</summary>
        public ShopSectionTranslation[] Translations { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/shopsectiontranslation
    public class ShopSectionTranslation
    {

        ///<summary>The numeric ID for the ShopSection.</summary>
        public int Shop_Section_Id { get; set; }

        ///<summary>The IETF language tag (e.g. 'fr') for the language of this translation.</summary>
        public string Language { get; set; }

        ///<summary>Translation of title of ShopSection.</summary>
        public string Title { get; set; }

        ///<summary>The ShopSection this translation belongs to.</summary>
        public ShopSection ShopSection { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/shoptranslation
    public class ShopTranslation
    {

        ///<summary>The numeric ID for the Shop.</summary>
        public int Shop_Id { get; set; }

        ///<summary>The IETF language tag (e.g. 'fr') for the language of this translation.</summary>
        public string Language { get; set; }

        ///<summary>Translation of an announcement to buyers that displays on the shop's homepage.</summary>
        public string Announcement { get; set; }

        ///<summary>Translation of the introductory text from the top of the seller's policies page (may be blank).</summary>
        public string Policy_Welcome { get; set; }

        ///<summary>Translation of the seller's policy on payment (may be blank).</summary>
        public string Policy_Payment { get; set; }

        ///<summary>Translation of the seller's policy on shipping (may be blank).</summary>
        public string Policy_Shipping { get; set; }

        ///<summary>Translation of the seller's policy on refunds (may be blank).</summary>
        public string Policy_Refunds { get; set; }

        ///<summary>Translation of any additional policy information the seller provides (may be blank).</summary>
        public string Policy_Additional { get; set; }

        ///<summary>Translation of privacy policy information the seller provides (may be blank).</summary>
        public string Policy_Privacy { get; set; }

        ///<summary>Translation of the Shop's Seller information (may be blank).</summary>
        public string Policy_Seller_Info { get; set; }

        ///<summary>Translation of a message that is sent to users who buy from this shop.</summary>
        public string Sale_Message { get; set; }

        ///<summary>Translation of a message that is sent to users who buy a digital item from this shop.</summary>
        public string Digital_Sale_Message { get; set; }

        ///<summary>Translation of a brief heading for the shop's main page.</summary>
        public string Title { get; set; }

        ///<summary>Translation of a message to buyers in response to new convos (if Shop.is_vacation is true).</summary>
        public string Vacation_Autoreply { get; set; }

        ///<summary>Translation of a message to buyers (if Shop.is_vacation is true).</summary>
        public string Vacation_Message { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/structuredpolicies
    public class StructuredPolicies
    {

        ///<summary>Unqiue identifier for the policies</summary>
        public int Structured_Policies_Id { get; set; }

        ///<summary>Payment information for the seller.</summary>
        public Dictionary<string, string> Payments { get; set; }

        ///<summary>Structured refunds information for the seller.</summary>
        public Dictionary<string, string> Refunds { get; set; }

        ///<summary>Structured shipping information for the seller.</summary>
        public Dictionary<string, string> Shipping { get; set; }

        ///<summary></summary>
        public int Create_Date { get; set; }

        ///<summary></summary>
        public int Update_Date { get; set; }

        ///<summary></summary>
        public string Create_Date_Formatted { get; set; }

        ///<summary></summary>
        public string Update_Date_Formatted { get; set; }

        ///<summary>True if the shop has previously filled out any unstructured policies.</summary>
        public bool Has_Unstructured_Policies { get; set; }

        ///<summary></summary>
        public string Additional_Terms_And_Conditions { get; set; }

        ///<summary>True if the shop is in Germany</summary>
        public bool Shop_In_Germany { get; set; }

        ///<summary>Character limits for custom fields</summary>
        public Dictionary<string, string> Char_Limits { get; set; }

        ///<summary>Whether to include a link to dispute resolution form.</summary>
        public bool Include_Dispute_Form_Link { get; set; }

        ///<summary>Privacy policy for the shop.</summary>
        public Dictionary<string, string> Privacy { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/style
    public class Style
    {

        ///<summary>Style ID for this style</summary>
        public int Style_Id { get; set; }

        ///<summary>Style Name</summary>
        public string style { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/taxonomy
    public class Taxonomy
    {

        ///<summary>The unique ID of this taxonomy node.</summary>
        public int Id { get; set; }

        ///<summary>Depth in the taxonomy, roots are at level 0.</summary>
        public int Level { get; set; }

        ///<summary>Human readable name for this taxonomy node.</summary>
        public string Name { get; set; }

        ///<summary>Path of our parent node.</summary>
        public string Parent { get; set; }

        ///<summary>ID of our parent node.</summary>
        public int Parent_Id { get; set; }

        ///<summary>Path from the root to this node, separated by periods.</summary>
        public string Path { get; set; }

        ///<summary>The corresponding ID in Etsy's Category API resource.</summary>
        public int Category_Id { get; set; }

        ///<summary>The child Taxonomy nodes, embedded directly in the response.</summary>
        public string[] Children { get; set; }

        ///<summary>The taxonomy_ids of our child nodes.</summary>
        public int[] Children_Ids { get; set; }

        ///<summary>The taxonomy_ids of this node and all its parents. They are listed in order from root to leaf.</summary>
        public int[] Full_Path_Taxonomy_Ids { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/taxonomynodeproperty
    public class TaxonomyNodeProperty
    {

        ///<summary>The ID of the property.</summary>
        public int Property_Id { get; set; }

        ///<summary>The name of the property.</summary>
        public string Name { get; set; }

        ///<summary>The name used in user interfaces.</summary>
        public string Display_Name { get; set; }

        ///<summary>A list of available scales.</summary>
        public TaxonomyPropertyScale[] Scales { get; set; }

        ///<summary>Is this attribute required for listings in this category?</summary>
        public bool Is_Required { get; set; }

        ///<summary>Can this property be used in listing attributes?</summary>
        public bool Supports_Attributes { get; set; }

        ///<summary>Can this property be used in listing variations?</summary>
        public bool Supports_Variations { get; set; }

        ///<summary>Can this property have multiple values?</summary>
        public bool Is_Multivalued { get; set; }

        ///<summary>A list of allowed values.</summary>
        public TaxonomyPropertyValue[] Possible_Values { get; set; }

        ///<summary>A list of values that are always selected for the given category.</summary>
        public TaxonomyPropertyValue[] Selected_Values { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/taxonomypropertyscale
    public class TaxonomyPropertyScale
    {

        ///<summary>The ID of the scale.</summary>
        public int Scale_Id { get; set; }

        ///<summary>How to label the scale.</summary>
        public string Display_Name { get; set; }

        ///<summary>A description of the scale.</summary>
        public string Description { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/taxonomypropertyvalue
    public class TaxonomyPropertyValue
    {

        ///<summary>The numeric ID of this value.</summary>
        public int Value_Id { get; set; }

        ///<summary>How to display the value.</summary>
        public string Name { get; set; }

        ///<summary>The ID of the scale this belongs to (if any).</summary>
        public int Scale_Id { get; set; }

        ///<summary>The order of this value under its property</summary>
        public int Order { get; set; }

        ///<summary>The list of values this value is equal to (if any).</summary>
        public int[] Equal_To { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/team
    public class Team
    {

        ///<summary>The team's numeric ID.</summary>
        public int Group_Id { get; set; }

        ///<summary>The team's name.</summary>
        public string Name { get; set; }

        ///<summary>The date and time the team was created in Epoch seconds.</summary>
        public int Create_Date { get; set; }

        ///<summary>The date and time the team was last updated in Epoch seconds.</summary>
        public int Update_Date { get; set; }

        ///<summary>A list of tags describing the team.</summary>
        public string[] Tags { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/transaction
    public class Transaction
    {

        ///<summary>The numeric ID for this transaction.</summary>
        public int Transaction_Id { get; set; }

        ///<summary>The title of the listing for this transaction.</summary>
        public string Title { get; set; }

        ///<summary>The description of the listing for this transaction.</summary>
        public string Description { get; set; }

        ///<summary>The numeric ID for the seller of this transaction.</summary>
        public int Seller_User_Id { get; set; }

        ///<summary>The numeric ID for the buyer of this transaction.</summary>
        public int Buyer_User_Id { get; set; }

        ///<summary>The date and time the transaction was created, in epoch seconds.</summary>
        public float Creation_Tsz { get; set; }

        ///<summary>The date and time the transaction was paid, in epoch seconds.</summary>
        public float Paid_Tsz { get; set; }

        ///<summary>The date and time the transaction was shipped, in epoch seconds.</summary>
        public float Shipped_Tsz { get; set; }

        ///<summary>The price of the transaction.</summary>
        public float Price { get; set; }

        ///<summary>The ISO code (alphabetic) for the seller's native currency.</summary>
        public string Currency_Code { get; set; }

        ///<summary>The quantity of items in this transaction.</summary>
        public int Quantity { get; set; }

        ///<summary>The tags in the listing for this transaction.</summary>
        public string[] Tags { get; set; }

        ///<summary>The materials in the listing for this transaction.</summary>
        public string[] Materials { get; set; }

        ///<summary>The numeric ID of the primary listing image for this transaction.</summary>
        public int Image_Listing_Id { get; set; }

        ///<summary>The numeric ID for the receipt associated to this transaction.</summary>
        public int Receipt_Id { get; set; }

        ///<summary>The shipping cost for this transaction.</summary>
        public float Shipping_Cost { get; set; }

        ///<summary>True if this listing is for a digital download.</summary>
        public bool Is_Digital { get; set; }

        ///<summary>Written description of the files attached to this digital listing.</summary>
        public string File_Data { get; set; }

        ///<summary>The numeric ID for this listing associated to this transaction.</summary>
        public int Listing_Id { get; set; }

        ///<summary>True if this transaction was created for an in-person quick sale.</summary>
        public bool Is_Quick_Sale { get; set; }

        ///<summary>The numeric ID of seller's feedback.</summary>
        public int Seller_Feedback_Id { get; set; }

        ///<summary>The numeric ID for the buyer's feedback.</summary>
        public int Buyer_Feedback_Id { get; set; }

        ///<summary>The type of transaction, usually "listing".</summary>
        public string Transaction_Type { get; set; }

        ///<summary>URL of this transaction</summary>
        public string Url { get; set; }

        ///<summary>Purchased variations for this transaction.</summary>
        public ListingInventory[] Variations { get; set; }

        ///<summary>The product data with the purchased item, if any.Please note: you will need the listings_w permission to access SKU data as the seller.</summary>
        public ListingProduct Product_Data { get; set; }

        ///<summary>The buyer that is associated with this transaction.</summary>
        public User Buyer { get; set; }

        ///<summary>The primary listing image for this transaction.</summary>
        public ListingImage MainImage { get; set; }

        ///<summary>The listing that is associated with this transaction. Please note that this association will return the current listing details, not the details at the time of purchase.</summary>
        public Listing Listing { get; set; }

        ///<summary>The seller that is associated with this transaction.</summary>
        public User Seller { get; set; }

        ///<summary>The receipt that is associated with this transaction.</summary>
        public Receipt Receipt { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/treasury
    public class Treasury
    {

        ///<summary>Unique id of the collection</summary>
        public string Id { get; set; }

        ///<summary>Title of the collection</summary>
        public string Title { get; set; }

        ///<summary>Description of the collection</summary>
        public string Description { get; set; }

        ///<summary>If the Treasury was featured on the homepage, the time in seconds since the epoch that it was featured</summary>
        public int Homepage { get; set; }

        ///<summary>Whether the Treasury has been flagged mature or not</summary>
        public bool Mature { get; set; }

        ///<summary>Whether the Treasury has been set to private</summary>
        public bool Private { get; set; }

        ///<summary>Language/Locale of the collection</summary>
        public string Locale { get; set; }

        ///<summary>The number of comments on this Treasury</summary>
        public int Comment_Count { get; set; }

        ///<summary>The tags associated with this Treasury</summary>
        public string[] Tags { get; set; }

        ///<summary>Clicks, views, shares, and reports metrics of this collection</summary>
        public TreasuryCounts Counts { get; set; }

        ///<summary>The algorithmic ranking value assigned to this collection</summary>
        public float Hotness { get; set; }

        ///<summary>The algorithmic ranking value shown as a color (color hexadecimal)</summary>
        public string Hotness_Color { get; set; }

        ///<summary>ID of the user (curator) of the collection</summary>
        public int User_Id { get; set; }

        ///<summary>Name of the user (curator) of the collection</summary>
        public string User_Name { get; set; }

        ///<summary>ID of the user's (curator's) avatar</summary>
        public int User_Avatar_Id { get; set; }

        ///<summary>The listings that are in this collection</summary>
        public TreasuryListing[] Listings { get; set; }

        ///<summary>Time this collection was created, in epoch seconds</summary>
        public float Creation_Tsz { get; set; }

        ///<summary>The time that this treasury was published, in epoch seconds</summary>
        public int Became_Public_Date { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/treasurycounts
    public class TreasuryCounts
    {

        ///<summary>The number of times the Treasury has been clicked on</summary>
        public int Clicks { get; set; }

        ///<summary>The number of times the Treasury has been viewed</summary>
        public int Views { get; set; }

        ///<summary>The number of times the Treasury has been shared</summary>
        public int Shares { get; set; }

        ///<summary>The number of times the Treasury has been reported</summary>
        public int Reports { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/treasurylisting
    public class TreasuryListing
    {

        ///<summary>The detailed fields of the listing</summary>
        public TreasuryListingData Data { get; set; }

        ///<summary>Time the listing was added to this Treasury, in epoch seconds</summary>
        public float Creation_Tsz { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/treasurylistingdata
    public class TreasuryListingData
    {

        ///<summary>The numeric ID of the user who posted the item</summary>
        public int User_Id { get; set; }

        ///<summary>The listing's title</summary>
        public string Title { get; set; }

        ///<summary>The item's price (private for sold listings)</summary>
        public float Price { get; set; }

        ///<summary>The ISO (alphabetic) code for the listing's currency</summary>
        public string Currency_Code { get; set; }

        ///<summary>The ID of the listing</summary>
        public int Listing_Id { get; set; }

        ///<summary>Whether the listing is active or not</summary>
        public string State { get; set; }

        ///<summary>The shop to which the listing belongs</summary>
        public string Shop_Name { get; set; }

        ///<summary>The ID of the main image of the listing</summary>
        public int Image_Id { get; set; }

        ///<summary>The url to a 75x75 thumbnail of the main image.</summary>
        public string Image_Url_75x75 { get; set; }

        ///<summary>The url to a 170x135 thumbnail of the main image.</summary>
        public string Image_Url_170x135 { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/user
    public class User
    {

        ///<summary>The user's numeric ID. This is also valid as the user's shop ID.</summary>
        public int User_Id { get; set; }

        ///<summary>The user's login name.</summary>
        public string Login_Name { get; set; }

        ///<summary>The user's primary email address.</summary>
        public string Primary_Email { get; set; }

        ///<summary>The date and time the user was created, in epoch seconds.</summary>
        public float Creation_Tsz { get; set; }

        ///<summary>Public key for user</summary>
        public Dictionary<string, string> User_Pub_Key { get; set; }

        ///<summary>The numeric ID of the user that referred this user.</summary>
        public string Referred_By_User_Id { get; set; }

        ///<summary>An associative array of feedback totals for the user.</summary>
        public FeedbackInfo Feedback_Info { get; set; }

        ///<summary>The total number of transactions the user has available for a new review.</summary>
        public int Awaiting_Feedback_Count { get; set; }

        ///<summary>Should this user's listings be created or edited using the new Inventory endpoints?</summary>
        public bool Use_New_Inventory_Endpoints { get; set; }

        ///<summary>An array of shops that belong to the user.</summary>
        public Shop[] Shops { get; set; }

        ///<summary>The user's public profile.</summary>
        public UserProfile Profile { get; set; }

        ///<summary>An array of receipts for listings this user has purchased.</summary>
        public Receipt[] BuyerReceipts { get; set; }

        ///<summary>An array of transactions (sold listings) this user has purchased.</summary>
        public Transaction[] BuyerTransactions { get; set; }

        ///<summary>A user's Addresses.</summary>
        public UserAddress[] Addresses { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/useraddress
    public class UserAddress
    {

        ///<summary>The numeric ID of the user's address.</summary>
        public int User_Address_Id { get; set; }

        ///<summary>The user's numeric ID.</summary>
        public int User_Id { get; set; }

        ///<summary>The user's name for this address.</summary>
        public string Name { get; set; }

        ///<summary>The first line of the user's address.</summary>
        public string First_Line { get; set; }

        ///<summary>The second line of the user's address.</summary>
        public string Second_Line { get; set; }

        ///<summary>The city field of the user's address.</summary>
        public string City { get; set; }

        ///<summary>The state field of the user's address.</summary>
        public string State { get; set; }

        ///<summary>The zip code field of the user's address.</summary>
        public string Zip { get; set; }

        ///<summary>The country's numeric ID.</summary>
        public int Country_Id { get; set; }

        ///<summary>The name of the user's country</summary>
        public string Country_Name { get; set; }

        ///<summary>Is this the user's default shipping address</summary>
        public bool Is_Default_Shipping { get; set; }

        ///<summary>The full Country record for the user's address.</summary>
        public Country Country { get; set; }

        ///<summary>The full User record whom entered this address.</summary>
        public User User { get; set; }

    }


    //https://www.etsy.com/developers/documentation/reference/userprofile
    public class UserProfile
    {

        ///<summary>The numeric ID of the user this profile corresponds to.</summary>
        public int User_Id { get; set; }

        ///<summary>The login name of the user that owns this profile.</summary>
        public string Login_Name { get; set; }

        ///<summary>The bio of the user.</summary>
        public string Bio { get; set; }

        ///<summary>The gender of the user.</summary>
        public string Gender { get; set; }

        ///<summary>The birth month of the user.</summary>
        public string Birth_Month { get; set; }

        ///<summary>The birth day of the user.</summary>
        public string Birth_Day { get; set; }

        ///<summary>The birth year of the user.</summary>
        public string Birth_Year { get; set; }

        ///<summary>The date and time the user was created, in epoch seconds.</summary>
        public float Join_Tsz { get; set; }

        ///<summary>A list of the user's favorite materials.</summary>
        public string Materials { get; set; }

        ///<summary>The numeric ID of the user's country.</summary>
        public int Country_Id { get; set; }

        ///<summary>The user's region (free-form text)</summary>
        public string Region { get; set; }

        ///<summary>The user's city (free-form text)</summary>
        public string City { get; set; }

        ///<summary>The numeric ID of this user's avatar image.</summary>
        public int Avatar_Id { get; set; }

        ///<summary>The latitude of the user.</summary>
        public float Lat { get; set; }

        ///<summary>The longitude of the user.</summary>
        public float Lon { get; set; }

        ///<summary>The number of bought items for this user.</summary>
        public int Transaction_Buy_Count { get; set; }

        ///<summary>The number of sold transactions for this user.</summary>
        public int Transaction_Sold_Count { get; set; }

        ///<summary>If the user is a seller or not. Value true if user is a seller.</summary>
        public bool Is_Seller { get; set; }

        ///<summary>The URL to the user's avatar image; dimensions 75px square.</summary>
        public string Image_Url_75x75 { get; set; }

        ///<summary>The first name of the user.</summary>
        public string First_Name { get; set; }

        ///<summary>The last name of the user.</summary>
        public string Last_Name { get; set; }

        ///<summary>The country in which the user lives.</summary>
        public Country Country { get; set; }

    }

    public class Page
    {
        public int Page_Id { get; set; }
        public string Page_Slug { get; set; }
        public int Status { get; set; }
        public int Group_Id { get; set; }
        public string Image_Id { get; set; }
        public string Page_Name { get; set; }
        public int Creator_Id { get; set; }
        public string Byline { get; set; }
        public string Link { get; set; }
    }
}
